/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.proizvo.editor.app;

import com.proizvo.editor.api.IProject;
import com.proizvo.editor.cfg.Configuration;
import com.proizvo.editor.data.Map;
import com.proizvo.editor.data.MapInfo;
import com.proizvo.editor.data.Tileset;
import com.proizvo.editor.impl.RPGMakerMVProj;
import com.proizvo.editor.tiles.TilePanel;
import com.proizvo.editor.ui.PluginManagerDialog;
import com.proizvo.editor.util.Strings;
import com.proizvo.editor.util.Threads;
import com.proizvo.editor.util.Threads.Action;
import com.proizvo.editor.view.EventIconPanel;
import com.proizvo.editor.view.MapNode;
import com.proizvo.editor.view.TileIconPanel;
import com.xafero.sew.Wiki;

import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;

import javax.swing.JOptionPane;

import java.awt.event.WindowEvent;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map.Entry;
import java.util.concurrent.Callable;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JTree;
import javax.swing.UIManager;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

import static com.proizvo.editor.impl.ProjectCreator.*;
import com.proizvo.editor.remote.EnterTask;
import com.proizvo.editor.remote.Version;
import javax.swing.Timer;

/**
 *
 * @author John
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openProjChooser = new javax.swing.JFileChooser();
        newProjDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfProjectName = new javax.swing.JTextField();
        tfGameTitle = new javax.swing.JTextField();
        tfStorageLoc = new javax.swing.JTextField();
        btnChooseStorage = new javax.swing.JButton();
        chooseProjFolder = new javax.swing.JFileChooser();
        aboutDialog = new javax.swing.JDialog();
        abCloseBtn = new javax.swing.JButton();
        abTitleLbl = new javax.swing.JLabel();
        abSubtitleLbl = new javax.swing.JLabel();
        abIconLbl = new javax.swing.JLabel();
        abUltratitleLbl = new javax.swing.JLabel();
        toolBar = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jButton7 = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        jButton17 = new javax.swing.JButton();
        spContent = new javax.swing.JSplitPane();
        spMeta = new javax.swing.JSplitPane();
        scpTree = new javax.swing.JScrollPane();
        mapTree = new javax.swing.JTree();
        tbpItems = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        mapPanel = new com.proizvo.editor.tiles.TilePanel();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel4 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        mapStLbl = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        zoomStLbl = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JToolBar.Separator();
        jLabel7 = new javax.swing.JLabel();
        jSeparator14 = new javax.swing.JToolBar.Separator();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        miNewProj = new javax.swing.JMenuItem();
        miOpenProj = new javax.swing.JMenuItem();
        miCloseProj = new javax.swing.JMenuItem();
        miSaveProj = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        miPublishProj = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        miQuitApp = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        miUndo = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        miCut = new javax.swing.JMenuItem();
        miCopy = new javax.swing.JMenuItem();
        miPaste = new javax.swing.JMenuItem();
        miDelete = new javax.swing.JMenuItem();
        modeMenu = new javax.swing.JMenu();
        mcMap = new javax.swing.JCheckBoxMenuItem();
        mcEvent = new javax.swing.JCheckBoxMenuItem();
        drawMenu = new javax.swing.JMenu();
        mcPencil = new javax.swing.JCheckBoxMenuItem();
        mcRect = new javax.swing.JCheckBoxMenuItem();
        mcEllipse = new javax.swing.JCheckBoxMenuItem();
        mcFill = new javax.swing.JCheckBoxMenuItem();
        mcShadow = new javax.swing.JCheckBoxMenuItem();
        scaleMenu = new javax.swing.JMenu();
        miZoomIn = new javax.swing.JMenuItem();
        miZoomOut = new javax.swing.JMenuItem();
        miActual = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        miDatabase = new javax.swing.JMenuItem();
        miPlugins = new javax.swing.JMenuItem();
        miSounds = new javax.swing.JMenuItem();
        miEvents = new javax.swing.JMenuItem();
        miFigures = new javax.swing.JMenuItem();
        gameMenu = new javax.swing.JMenu();
        miGameTest = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        miOpenFolder = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        openProjChooser.setAcceptAllFileFilterUsed(false);
        openProjChooser.setApproveButtonText("Open");
        openProjChooser.setApproveButtonToolTipText("");
        openProjChooser.setDialogTitle("Open project");
        openProjChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Maker project (*.rpgproject)", "rpgproject"));

        newProjDialog.setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Game title:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Storing folder:");

        btnChooseStorage.setText("Choose...");
        btnChooseStorage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseStorageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newProjDialogLayout = new javax.swing.GroupLayout(newProjDialog.getContentPane());
        newProjDialog.getContentPane().setLayout(newProjDialogLayout);
        newProjDialogLayout.setHorizontalGroup(
            newProjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newProjDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newProjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newProjDialogLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(121, 121, 121)
                        .addGroup(newProjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newProjDialogLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(132, 132, 132))
                            .addGroup(newProjDialogLayout.createSequentialGroup()
                                .addComponent(tfGameTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(newProjDialogLayout.createSequentialGroup()
                        .addGroup(newProjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newProjDialogLayout.createSequentialGroup()
                                .addComponent(tfStorageLoc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChooseStorage))
                            .addGroup(newProjDialogLayout.createSequentialGroup()
                                .addGroup(newProjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(tfProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        newProjDialogLayout.setVerticalGroup(
            newProjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newProjDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newProjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newProjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfGameTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newProjDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfStorageLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseStorage))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chooseProjFolder.setApproveButtonText("Select folder");
        chooseProjFolder.setDialogTitle("Choose folder");
        chooseProjFolder.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        aboutDialog.setTitle("About Proizvo");
        aboutDialog.setResizable(false);
        aboutDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                aboutDialogWindowOpened(evt);
            }
        });

        abCloseBtn.setText("Close");
        abCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abCloseBtnActionPerformed(evt);
            }
        });

        abTitleLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        abTitleLbl.setText("Version 1.0.0");

        abSubtitleLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        abSubtitleLbl.setText("Copyright (C) 2016 Open Inventions Federated, Inc.");

        abIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/app_icon.jpg"))); // NOI18N

        abUltratitleLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        abUltratitleLbl.setText("All rights reserved.");

        javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
        aboutDialog.getContentPane().setLayout(aboutDialogLayout);
        aboutDialogLayout.setHorizontalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutDialogLayout.createSequentialGroup()
                .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutDialogLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(abCloseBtn))
                    .addGroup(aboutDialogLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(abTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(abUltratitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(abSubtitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 15, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutDialogLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(abIconLbl)
                .addGap(138, 138, 138))
        );
        aboutDialogLayout.setVerticalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutDialogLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(abIconLbl)
                .addGap(12, 12, 12)
                .addComponent(abTitleLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(abSubtitleLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(abUltratitleLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(abCloseBtn)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proizvo");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/document-new.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/folder-new.png"))); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/media-floppy.png"))); // NOI18N
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton3);
        toolBar.add(jSeparator5);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit-cut.png"))); // NOI18N
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton4);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit-copy.png"))); // NOI18N
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton6);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit-paste.png"))); // NOI18N
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton5);
        toolBar.add(jSeparator6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit-undo.png"))); // NOI18N
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton7);
        toolBar.add(jSeparator7);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/user-desktop.png"))); // NOI18N
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton8);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/input-gaming.png"))); // NOI18N
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton9);
        toolBar.add(jSeparator8);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/View-zoom-in.png"))); // NOI18N
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton10);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/View-zoom-out.png"))); // NOI18N
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton11);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/View-zoom-target.png"))); // NOI18N
        jButton12.setFocusable(false);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton12);
        toolBar.add(jSeparator9);

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/applications-system.png"))); // NOI18N
        jButton13.setFocusable(false);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton13);

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/package-x-generic.png"))); // NOI18N
        jButton14.setFocusable(false);
        jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton14);

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/audio-volume-medium.png"))); // NOI18N
        jButton15.setFocusable(false);
        jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton15.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton15);

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/folder-saved-search.png"))); // NOI18N
        jButton16.setFocusable(false);
        jButton16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton16.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton16);

        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Gajim.png"))); // NOI18N
        jButton18.setFocusable(false);
        jButton18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton18.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton18);
        toolBar.add(jSeparator10);

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/media-playback-start.png"))); // NOI18N
        jButton17.setFocusable(false);
        jButton17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton17.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton17);

        spContent.setDividerLocation(280);

        spMeta.setDividerLocation(380);
        spMeta.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        mapTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                mapTreeValueChanged(evt);
            }
        });
        scpTree.setViewportView(mapTree);

        spMeta.setBottomComponent(scpTree);

        tbpItems.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 351, Short.MAX_VALUE)
        );

        tbpItems.addTab("tab1", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 351, Short.MAX_VALUE)
        );

        tbpItems.addTab("tab2", jPanel2);

        spMeta.setLeftComponent(tbpItems);

        spContent.setLeftComponent(spMeta);

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 844, Short.MAX_VALUE)
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 674, Short.MAX_VALUE)
        );

        spContent.setRightComponent(mapPanel);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jLabel4.setText("                                                                      ");
        jToolBar1.add(jLabel4);
        jToolBar1.add(jSeparator11);

        mapStLbl.setText("?");
        jToolBar1.add(mapStLbl);

        jLabel8.setText("                              ");
        jToolBar1.add(jLabel8);
        jToolBar1.add(jSeparator12);

        zoomStLbl.setText("?");
        jToolBar1.add(zoomStLbl);

        jLabel9.setText("                       ");
        jToolBar1.add(jLabel9);
        jToolBar1.add(jSeparator13);

        jLabel7.setText("                      ");
        jToolBar1.add(jLabel7);
        jToolBar1.add(jSeparator14);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        miNewProj.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        miNewProj.setText("New project...");
        miNewProj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewProjActionPerformed(evt);
            }
        });
        fileMenu.add(miNewProj);

        miOpenProj.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        miOpenProj.setText("Open project...");
        miOpenProj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenProjActionPerformed(evt);
            }
        });
        fileMenu.add(miOpenProj);

        miCloseProj.setText("Close project");
        fileMenu.add(miCloseProj);

        miSaveProj.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        miSaveProj.setText("Save project");
        fileMenu.add(miSaveProj);
        fileMenu.add(jSeparator1);

        miPublishProj.setText("Publishing...");
        miPublishProj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPublishProjActionPerformed(evt);
            }
        });
        fileMenu.add(miPublishProj);
        fileMenu.add(jSeparator2);

        miQuitApp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        miQuitApp.setMnemonic('x');
        miQuitApp.setText("Quit");
        miQuitApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miQuitAppActionPerformed(evt);
            }
        });
        fileMenu.add(miQuitApp);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        miUndo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        miUndo.setText("Undo");
        editMenu.add(miUndo);
        editMenu.add(jSeparator3);

        miCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        miCut.setMnemonic('t');
        miCut.setText("Cut");
        editMenu.add(miCut);

        miCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        miCopy.setMnemonic('y');
        miCopy.setText("Copy");
        editMenu.add(miCopy);

        miPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        miPaste.setMnemonic('p');
        miPaste.setText("Paste");
        editMenu.add(miPaste);

        miDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        miDelete.setMnemonic('d');
        miDelete.setText("Delete");
        editMenu.add(miDelete);

        menuBar.add(editMenu);

        modeMenu.setMnemonic('m');
        modeMenu.setText("Mode");

        mcMap.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        mcMap.setSelected(true);
        mcMap.setText("Map");
        modeMenu.add(mcMap);

        mcEvent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        mcEvent.setText("Event");
        modeMenu.add(mcEvent);

        menuBar.add(modeMenu);

        drawMenu.setMnemonic('d');
        drawMenu.setText("Draw");

        mcPencil.setSelected(true);
        mcPencil.setText("Pencil");
        drawMenu.add(mcPencil);

        mcRect.setText("Rectangle");
        drawMenu.add(mcRect);

        mcEllipse.setText("Ellipse");
        drawMenu.add(mcEllipse);

        mcFill.setText("Fill");
        drawMenu.add(mcFill);

        mcShadow.setText("Shadow");
        drawMenu.add(mcShadow);

        menuBar.add(drawMenu);

        scaleMenu.setMnemonic('s');
        scaleMenu.setText("Scale");

        miZoomIn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_PLUS, java.awt.event.InputEvent.CTRL_MASK));
        miZoomIn.setText("Zoom in");
        scaleMenu.add(miZoomIn);

        miZoomOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_MINUS, java.awt.event.InputEvent.CTRL_MASK));
        miZoomOut.setText("Zoom out");
        scaleMenu.add(miZoomOut);

        miActual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_0, java.awt.event.InputEvent.CTRL_MASK));
        miActual.setText("Actual size");
        scaleMenu.add(miActual);

        menuBar.add(scaleMenu);

        toolsMenu.setMnemonic('t');
        toolsMenu.setText("Tools");

        miDatabase.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        miDatabase.setText("Database...");
        toolsMenu.add(miDatabase);

        miPlugins.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, 0));
        miPlugins.setText("Plug-in manager...");
        miPlugins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPluginsActionPerformed(evt);
            }
        });
        toolsMenu.add(miPlugins);

        miSounds.setText("Sound test...");
        toolsMenu.add(miSounds);

        miEvents.setText("Event search...");
        toolsMenu.add(miEvents);

        miFigures.setText("Figure creator...");
        toolsMenu.add(miFigures);

        menuBar.add(toolsMenu);

        gameMenu.setMnemonic('g');
        gameMenu.setText("Game");

        miGameTest.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        miGameTest.setText("Test game");
        miGameTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGameTestActionPerformed(evt);
            }
        });
        gameMenu.add(miGameTest);
        gameMenu.add(jSeparator4);

        miOpenFolder.setText("Open folder");
        miOpenFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenFolderActionPerformed(evt);
            }
        });
        gameMenu.add(miOpenFolder);

        menuBar.add(gameMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        contentsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contentsMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About...");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(spContent)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spContent, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miQuitAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miQuitAppActionPerformed
        dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        System.exit(0);
    }//GEN-LAST:event_miQuitAppActionPerformed

    private void miOpenProjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenProjActionPerformed
        if (openProjChooser.showOpenDialog(this) != JOptionPane.OK_OPTION) {
            return;
        }
        File prjFile = openProjChooser.getSelectedFile();
        openProject(prjFile);
    }//GEN-LAST:event_miOpenProjActionPerformed

    private void miNewProjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewProjActionPerformed
        if (JOptionPane.showConfirmDialog(this, newProjDialog.getContentPane(),
                "New project", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE)
                != JOptionPane.OK_OPTION) {
            return;
        }
        String gameName = tfGameTitle.getText();
        String projName = tfProjectName.getText();
        String projLoc = tfStorageLoc.getText();
        IProject proj = createNew(gameName, projName, projLoc);
        openProject(new File(proj.getProjectFile()));
    }//GEN-LAST:event_miNewProjActionPerformed

    private void btnChooseStorageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseStorageActionPerformed
        if (chooseProjFolder.showOpenDialog(this) != JOptionPane.OK_OPTION) {
            return;
        }
        File prjFolder = chooseProjFolder.getSelectedFile();
        tfStorageLoc.setText(prjFolder.getAbsolutePath());
    }//GEN-LAST:event_btnChooseStorageActionPerformed

    private void miOpenFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenFolderActionPerformed
        IProject proj = Environment.getInstance().getCurrent();
        if (proj == null) {
            return;
        }
        File dir = new File(proj.getBaseDirectory());
        try {
            Desktop.getDesktop().browse(dir.toURI());
        } catch (Exception e) {
            throw new RuntimeException(dir + "?", e);
        }
    }//GEN-LAST:event_miOpenFolderActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        File lastLoc = Configuration.getInstance().loadLastLocation();
        if (lastLoc == null) {
            return;
        }
        openProject(lastLoc);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        IProject lastProj = Environment.getInstance().getCurrent();
        if (lastProj == null) {
            return;
        }
        File lastLoc = new File(lastProj.getProjectFile());
        Configuration.getInstance().saveLastLocation(lastLoc);
    }//GEN-LAST:event_formWindowClosing

    private void mapTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_mapTreeValueChanged
        TreePath p = evt.getNewLeadSelectionPath();
        DefaultMutableTreeNode cmp = (DefaultMutableTreeNode) p.getLastPathComponent();
        Object raw = cmp.getUserObject();
        if (raw == null || !(raw instanceof MapNode)) {
            return;
        }
        MapNode obj = (MapNode) raw;
        try {
            updateOnMap(obj.getMap());
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mapTreeValueChanged

    private void contentsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentsMenuItemActionPerformed
        boolean isDeskOk = Desktop.isDesktopSupported();
        if (!isDeskOk) {
            JOptionPane.showMessageDialog(this, "Can't use desktop environment!",
                    "Fatal error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int delay = 0;
        final Environment env = Environment.getInstance();
        if (env.noWiki()) {
            delay = 100;
            Threads.executeSwing(new Callable<Wiki>() {
                @Override
                public Wiki call() throws Exception {
                    Wiki wiki = env.getWiki();
                    wiki.run();
                    return wiki;
                }
            }, new Action<Wiki>() {
                @Override
                public void call(Wiki obj) throws Exception {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.INFO,
                            "Wiki created: {0}", obj.getClass().getName());
                }
            });
        }
        Threads.executeOnce(delay, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                try {
                    Environment env = Environment.getInstance();
                    Wiki wiki = env.getWiki();
                    Desktop desk = Desktop.getDesktop();
                    desk.browse(wiki.getEndpoint());
                } catch (IOException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }//GEN-LAST:event_contentsMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        aboutDialog.setLocationRelativeTo(this);
        aboutDialog.setModal(true);
        aboutDialog.pack();
        aboutDialog.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void abCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abCloseBtnActionPerformed
        aboutDialog.setVisible(false);
    }//GEN-LAST:event_abCloseBtnActionPerformed

    private void miPublishProjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPublishProjActionPerformed
        IProject lastProj = Environment.getInstance().getCurrent();
        if (lastProj == null) {
            return;
        }
        File gameDir = new File(lastProj.getBaseDirectory());
        publishGame(gameDir, null, null);
    }//GEN-LAST:event_miPublishProjActionPerformed

    private void miPluginsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPluginsActionPerformed
        PluginManagerDialog pmgr = new PluginManagerDialog(this, true);
        pmgr.setVisible(true);
    }//GEN-LAST:event_miPluginsActionPerformed

    private void miGameTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGameTestActionPerformed
        IProject lastProj = Environment.getInstance().getCurrent();
        if (lastProj == null) {
            return;
        }
        File gameDir = new File(lastProj.getBaseDirectory());
        testGame(gameDir);
    }//GEN-LAST:event_miGameTestActionPerformed

    private void aboutDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_aboutDialogWindowOpened
        Version ver = new Version();
        aboutDialog.setTitle(String.format("About %s", ver.getName()));
        abTitleLbl.setText(String.format("Version %s (%s/%s)",
                ver.getVersion(), ver.getScmBranch(),
                ver.getScmRevision().substring(0, 10)));
        abSubtitleLbl.setText(String.format("#%s by %s", ver.getBuildDate().replace("-", "")
                .replace("T", "").replace(":", "").replace("Z", "")
                .substring(0, 10), ver.getOrgName()));
        abUltratitleLbl.setText(String.format("<HTML><a href=\"%s\">%s</a></HTML>",
                ver.getOrgURL(), ver.getOrgURL()));
    }//GEN-LAST:event_aboutDialogWindowOpened

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
    public static void main(String args[]) throws Exception {
        /* Enable communications */
        final EnterTask ct = new EnterTask();
        final Timer timer = new Timer(5 * 1000, ct);
        timer.setRepeats(false);
        timer.start();
        Runtime.getRuntime().addShutdownHook(new Thread() {
            @Override
            public void run() {
                ct.close();
                timer.stop();
            }
        });
        /* Set native OS X look and feel */
        System.setProperty("apple.laf.useScreenMenuBar", "true");
        System.setProperty("com.apple.mrj.application.apple.menu.about.name", "Proizvo");
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ct.parent(new MainWindow()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abCloseBtn;
    private javax.swing.JLabel abIconLbl;
    private javax.swing.JLabel abSubtitleLbl;
    private javax.swing.JLabel abTitleLbl;
    private javax.swing.JLabel abUltratitleLbl;
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton btnChooseStorage;
    private javax.swing.JFileChooser chooseProjFolder;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenu drawMenu;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu gameMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JLabel mapStLbl;
    private javax.swing.JTree mapTree;
    private javax.swing.JCheckBoxMenuItem mcEllipse;
    private javax.swing.JCheckBoxMenuItem mcEvent;
    private javax.swing.JCheckBoxMenuItem mcFill;
    private javax.swing.JCheckBoxMenuItem mcMap;
    private javax.swing.JCheckBoxMenuItem mcPencil;
    private javax.swing.JCheckBoxMenuItem mcRect;
    private javax.swing.JCheckBoxMenuItem mcShadow;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem miActual;
    private javax.swing.JMenuItem miCloseProj;
    private javax.swing.JMenuItem miCopy;
    private javax.swing.JMenuItem miCut;
    private javax.swing.JMenuItem miDatabase;
    private javax.swing.JMenuItem miDelete;
    private javax.swing.JMenuItem miEvents;
    private javax.swing.JMenuItem miFigures;
    private javax.swing.JMenuItem miGameTest;
    private javax.swing.JMenuItem miNewProj;
    private javax.swing.JMenuItem miOpenFolder;
    private javax.swing.JMenuItem miOpenProj;
    private javax.swing.JMenuItem miPaste;
    private javax.swing.JMenuItem miPlugins;
    private javax.swing.JMenuItem miPublishProj;
    private javax.swing.JMenuItem miQuitApp;
    private javax.swing.JMenuItem miSaveProj;
    private javax.swing.JMenuItem miSounds;
    private javax.swing.JMenuItem miUndo;
    private javax.swing.JMenuItem miZoomIn;
    private javax.swing.JMenuItem miZoomOut;
    private javax.swing.JMenu modeMenu;
    private javax.swing.JDialog newProjDialog;
    private javax.swing.JFileChooser openProjChooser;
    private javax.swing.JMenu scaleMenu;
    private javax.swing.JScrollPane scpTree;
    private javax.swing.JSplitPane spContent;
    private javax.swing.JSplitPane spMeta;
    private javax.swing.JTabbedPane tbpItems;
    private javax.swing.JTextField tfGameTitle;
    private javax.swing.JTextField tfProjectName;
    private javax.swing.JTextField tfStorageLoc;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JLabel zoomStLbl;
    // End of variables declaration//GEN-END:variables

    private void openProject(File prjFile) {
        try {
            RPGMakerMVProj proj = new RPGMakerMVProj(prjFile);
            Environment.getInstance().setCurrent(proj);
            setTitle(String.format("%s - %s", proj.getName(), "Proizvo"));
            setIconImage(Toolkit.getDefaultToolkit().getImage(proj.getIcon()));
            updateProjectTree(proj);
        } catch (IOException ioe) {
            String msg = "Could not read '" + prjFile + "'!";
            JOptionPane.showMessageDialog(this, msg,
                    "Input/Output error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, msg, ioe);
        }
    }

    private void updateProjectTree(RPGMakerMVProj proj) throws IOException {
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(proj.getName());
        for (MapInfo mi : proj.getMapInfos()) {
            if (mi == null) {
                continue;
            }
            Map map = proj.getMap(mi.getName());
            String name = map.getDisplayName();
            if (name == null || name.isEmpty()) {
                name = mi.getName();
            }
            MapNode node = new MapNode(map, name);
            root.add(new DefaultMutableTreeNode(node));
        }
        DefaultTreeModel mtm = (DefaultTreeModel) mapTree.getModel();
        mtm.setRoot(root);
        DefaultTreeCellRenderer dcr = (DefaultTreeCellRenderer) mapTree.getCellRenderer();
        dcr.setLeafIcon(new ImageIcon(getClass().getResource("/icons/format-justify-left.png")));
        dcr.setOpenIcon(new ImageIcon(getClass().getResource("/icons/preferences-desktop-locale.png")));
        selectFirstNode(mtm, mapTree);
    }

    private void selectFirstNode(DefaultTreeModel mtm, JTree mt) {
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) mtm.getRoot();
        TreePath tp = new TreePath(root.getFirstChild());
        mt.setExpandsSelectedPaths(true);
        mt.setSelectionPath(tp);
        mt.scrollPathToVisible(tp);
    }

    private void updateOnMap(Map map) throws IOException {
        RPGMakerMVProj proj = (RPGMakerMVProj) Environment.getInstance().getCurrent();
        Tileset set = proj.getTileSets().get(map.getTilesetId());
        ((TilePanel) mapPanel).update(map, set, proj);
        mapStLbl.setText(String.format("001:%s (%sx%s)", "MAP001", map.getWidth(), map.getHeight()));
        zoomStLbl.setText("100%");
        mapPanel.repaint();
        updateTilesetView(set, proj);
    }

    private void updateTilesetView(Tileset set, RPGMakerMVProj proj) throws IOException {
        tbpItems.removeAll();
        HashMap<String, List<String>> groups = groupTileSet(set);
        for (Entry<String, List<String>> e : groups.entrySet()) {
            tbpItems.addTab(e.getKey(), new TileIconPanel(e.getValue(), proj));
        }
        tbpItems.addTab("R", new EventIconPanel(null, proj));
        tbpItems.repaint();
    }

    private HashMap<String, List<String>> groupTileSet(Tileset set) {
        HashMap<String, List<String>> groups = new LinkedHashMap<>();
        for (String tsn : set.getTilesetNames()) {
            if (Strings.isEmpty(tsn)) {
                continue;
            }
            String key = tsn.split("_")[1].replaceAll("[0-9]", "");
            if (groups.containsKey(key)) {
                groups.get(key).add(tsn);
            } else {
                groups.put(key, Strings.asList(tsn));
            }
        }
        return groups;
    }

    private void testGame(File gameDir) {
        boolean modal = true;
        boolean exiting = false;
        com.proizvo.runner.app.HostDialog.showDialog(this, modal, exiting, gameDir);
    }

    private void publishGame(File gameDir, File tempDir, File toolDir) {
        boolean modal = true;
        boolean exiting = false;
        com.proizvo.pkg.app.PublishDialog.showDialog(this, modal, exiting,
                gameDir, tempDir, toolDir);
    }
}
